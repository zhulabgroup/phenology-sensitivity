---
title: "Analysis"
format: html
editor: visual
---


```{r setup, echo=FALSE, message=FALSE}
source("scripts/_setup.R")
```

# Prepare data

## Climate data
```{r download_prism, eval=FALSE}
library(prism)
prism_set_dl_dir("~/prismtmp")
prism_download(type = "tmean", years = 1895:2023, mon = 1:12, keep_zip = FALSE)
```

Aggregate monthly prism data to (year)_springmean.tif, (decade)_springmean.tif, complete_period_springmean.tif by doing pixel-wise average. Do this aggregation parallel and save the tif to save time for later extraction. (this part can be used to write a function for parallel do average, more like a optimizationd)
```{r aggregate_prism, eval=FALSE}
source("scripts/aggregate_prism.R")
```

(output: yearly and complete period spring mean tifs)

## Herbarium data

Herbarium data is downloaded from the [Global Biodiversity Information Facility (GBIF)](https://www.gbif.org/) using [mvh](https://github.com/tncvasconcelos/mvh) package. Here we only use a small portion of images (8 specimens of red maple from the Ann Arbor, MI area and download the images.) as a test example. 

```{r download_gbif, eval=FALSE}
# use R to download the images and rename to "jpg format" (format requirement for leafmachine2)

devtools::install_github("tncvasconcelos/mvh")
library(mvh)

# Search for specimen metadata
metadata <- search_specimen_metadata(
  taxon_name = "Acer rubrum",
  coordinates = c(42.28, -83.74),
  limit = 8
)

# Download specimen images
download_specimen_images(
  metadata,
  dir_name = "Red_maple_in_AnnArbor_example/specimens",
  result_file_name = "Red_maple_in_AnnArbor_example/result_download"
)

# after download_specimen_images(...)
specimen_dir <- "Red_maple_in_AnnArbor_example/specimens"

# find all .jpeg files
jpeg_files <- list.files(specimen_dir, pattern = "\\.jpeg$", full.names = TRUE)

# construct new names and rename
new_names <- sub("\\.jpeg$", ".jpg", jpeg_files)
file.rename(from = jpeg_files, to = new_names)

write_csv2(metadata, "meta_data.csv")
```

Processing the downloaded image using [Leafmachine2](https://github.com/Gene-Weaver/LeafMachine2) can be tested through [colab](https://colab.research.google.com/drive/1LoE62SuiyNy8uar-eKn8qQJ3x_CVr4q_#scrollTo=9KTbaoXba2Qh) or on local machine.

After install Leafmachine2 in colab or local machine, we only need run DetectPhenology.py to generate the phenology table. Before run DetectPhenology.py, remember to change the corresponding DetectPhenology.yaml file lines to the corresponding places you put your image and where you want to store the output:
dir_images_local: (input directory)
dir_output: (output directory)

Other potential adjustment please refer to [Leafmachine2](https://github.com/Gene-Weaver/LeafMachine2)

(output: meta_data.csv, phenology.csv)

## Field observation data
```{r download_prism, eval=FALSE}
source("scripts/download_npn.R")
```

(output: genus.rds files)

# Analysis

## Herbarium
```{r}
source("scripts/herbarium_analysis.R")
```

## Field observations
```{r}
source("scripts/field_observations_analysis.R")
```

## Hierachical model
```{r}
source("scripts/hierarchical_model_analysis.R")
```
