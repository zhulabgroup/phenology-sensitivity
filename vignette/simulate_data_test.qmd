---
title: 'simulate data to test LM and mixed effect model'
embed-resources: true
author: "Yi Liu"
date: "`r format(Sys.Date(), '%m/%d/%Y')`"
format:
  html:
    code-folding: show
    highlight: textmate
    number-sections: true
    theme: flatly
    toc: TRUE
    toc-depth: 4
    toc-float:
      collapsed: false
      smooth-scroll: true
---

try feak data and run Linear mixed model

```{r}
library(dplyr)
library(ggplot2)
```

# simulate one observation per individual with fixed slope
when fake the data, we can decide whether to add noise, and how much noise to add
```{r}

# Generate x and y coordinates for the 4 central dots
x_center <- 1:9
y_center <- 10 - x_center + rnorm(9,0,0.5)  # The equation for the line y = 5 - x

# Create a data frame to hold the center dots
center_dots <- data.frame(norm = x_center, y = y_center, anom = 0, label = "center")

# Create data frame for additional dots
additional_dots <- data.frame()

# For each center dot, generate 5 additional dots along a line with slope -2
for (i in 1:length(x_center)) {
  anom_i <- rnorm(1, 0, 0.5)  # Randomize x-coordinates
  y_i <- 10 - x_center[i]-2*anom_i +  rnorm(1,0,0.5)
  dots <- data.frame(norm = x_center[i], y_i = y_i, anom_i = anom_i, label = paste("around_center", i, sep = "_"))
  additional_dots <- rbind(additional_dots, dots)
}

  
combined_dots <- left_join(center_dots, additional_dots, by = "norm")
# Plot the results
sepp <- ggplot(combined_dots, aes(x = norm+anom, y = y)) +
  geom_point(aes(color = label.y)) +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +
  labs(title = "Dots Generated Around a Central Line",
       x = "X-axis",
       y = "Y-axis") +
  theme_minimal() +
  theme(legend.position = "none") + # Legend position
  geom_point(aes(x = norm+anom_i, y = y_i, color = label.y), shape = 1) 

print(sepp)
```

```{r}
model <- lm(y_i~norm+anom_i,additional_dots)
summary(model)
confint(model)
```
looks like that the anom slope always has larger uncertainty than the norm one

let's see adding more replicates to restrict temporal sensitivity can help: Yes

I feels that simple linear model definitely help by utilizing cilmate norm to restrict spatial sensitivity

# simulate one observation per individual with random slope
when fake the data, we can decide whether to add noise, and how much noise to add
```{r}

# Generate x and y coordinates for the 4 central dots
x_center <- 1:9
y_center <- 10 - x_center + rnorm(9,0,0.5)  # The equation for the line y = 5 - x

# Create a data frame to hold the center dots
center_dots <- data.frame(norm = x_center, y = y_center, anom = 0, label = "center")

# Create data frame for additional dots
additional_dots <- data.frame()

# For each center dot, generate 5 additional dots along a line with slope -2
for (i in 1:length(x_center)) {
  anom_i <- rnorm(1, 0, 0.5)  # Randomize x-coordinates
  temporal <- rnorm(1, -2, 0.1)
  y_i <- 10 - x_center[i]+temporal*anom_i +  rnorm(1,0,0.5)
  dots <- data.frame(norm = x_center[i], y_i = y_i, anom_i = anom_i, label = paste("around_center", i, sep = "_"))
  additional_dots <- rbind(additional_dots, dots)
}

  
  
combined_dots <- left_join(center_dots, additional_dots, by = "norm")
# Plot the results
sepp <- ggplot(combined_dots, aes(x = norm+anom, y = y)) +
  geom_point(aes(color = label.y)) +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +
  labs(title = "Dots Generated Around a Central Line",
       x = "X-axis",
       y = "Y-axis") +
  theme_minimal() +
  theme(legend.position = "none") + # Legend position
  geom_point(aes(x = norm+anom_i, y = y_i, color = label.y), shape = 1) 

print(sepp)
```

```{r}
model <- lm(y_i~norm+anom_i,additional_dots)
summary(model)
confint(model)
```
# simulate multiple observation per individual with fixed slope

```{r}

# Generate x and y coordinates for the 4 central dots
x_center <- 1:9
y_center <- 10 - x_center + rnorm(9,0,0.5)  # The equation for the line y = 5 - x

# Create a data frame to hold the center dots
center_dots <- data.frame(norm = x_center, y = y_center, anom = 0, label = "center")

# Create data frame for additional dots
additional_dots <- data.frame()

# For each center dot, generate 5 additional dots along a line with slope -2
for (i in 1:length(x_center)) {
  anom_i <- rnorm(5, 0, 0.5)  # Randomize x-coordinates
  y_i <- 10 - x_center[i]-2*anom_i +  rnorm(5,0,0.5)
  dots <- data.frame(norm = x_center[i], y_i = y_i, anom_i = anom_i, label = paste("around_center", i, sep = "_"))
  additional_dots <- rbind(additional_dots, dots)
}

  
combined_dots <- left_join(center_dots, additional_dots, by = "norm")
# Plot the results
sepp <- ggplot(combined_dots, aes(x = norm+anom, y = y)) +
  geom_point(aes(color = label.y)) +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +
  labs(title = "Dots Generated Around a Central Line",
       x = "X-axis",
       y = "Y-axis") +
  theme_minimal() +
  theme(legend.position = "none") + # Legend position
  geom_point(aes(x = norm+anom_i, y = y_i, color = label.y), shape = 1) 

print(sepp)
```
```{r}
model <- lm(y_i~norm+anom_i,additional_dots)
summary(model)
confint(model)
```
adding more dots for each individual narrow the temporal uncertainty

```{r}
library(blme)
temporal_model <- blmer(y_i ~ norm + anom_i + (anom_i | label), data = additional_dots,
                        cov.prior = invwishart(df = 3, scale = diag(c(50, 50), 2)))

temporal_model
```

# simulate multiple observation per individual with random slope

```{r}

# Generate x and y coordinates for the 4 central dots
x_center <- 1:9
y_center <- 10 - x_center + rnorm(9,0,0.5)  # The equation for the line y = 5 - x

# Create a data frame to hold the center dots
center_dots <- data.frame(norm = x_center, y = y_center, anom = 0, label = "center")

# Create data frame for additional dots
additional_dots <- data.frame()

# For each center dot, generate 5 additional dots along a line with slope -2
for (i in 1:length(x_center)) {
  anom_i <- rnorm(5, 0, 0.5)  # Randomize x-coordinates
  temporal <- rnorm(1, -2, 1)
  y_i <- 10 - x_center[i]+ temporal*anom_i +  rnorm(5,0,0.5)
  dots <- data.frame(norm = x_center[i], y_i = y_i, anom_i = anom_i, label = paste("around_center", i, sep = "_"))
  additional_dots <- rbind(additional_dots, dots)
}

  
combined_dots <- left_join(center_dots, additional_dots, by = "norm")
# Plot the results
sepp <- ggplot(combined_dots, aes(x = norm+anom, y = y)) +
  geom_point(aes(color = label.y)) +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +
  labs(title = "Dots Generated Around a Central Line",
       x = "X-axis",
       y = "Y-axis") +
  theme_minimal() +
  theme(legend.position = "none") + # Legend position
  geom_point(aes(x = norm+anom_i, y = y_i, color = label.y), shape = 1) 

print(sepp)
```

```{r}
model <- lm(y_i~norm+anom_i,additional_dots)
summary(model)
confint(model)
```
```{r}
library(blme)
temporal_model <- blmer(y_i ~ norm + anom_i + (anom_i | label), data = additional_dots,
                        cov.prior = invwishart(df = 3, scale = diag(c(50, 50), 2)))

temporal_model
```